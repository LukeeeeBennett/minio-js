{"version":3,"sources":["xml-parsers.js"],"names":["parseXml","xml","result","fxp","parse","Error","toArray","param","Array","isArray","parseError","headerInfo","xmlErr","xmlObj","e","errors","S3Error","_","each","value","key","toLowerCase","parseCopyObject","etag","lastModified","xmlobj","CopyObjectResult","InvalidXMLError","ETag","replace","LastModified","Date","parseListMultipart","uploads","prefixes","isTruncated","ListMultipartUploadsResult","IsTruncated","NextKeyMarker","nextKeyMarker","NextUploadIdMarker","nextUploadIdMarker","CommonPrefixes","forEach","prefix","push","Upload","upload","Key","uploadId","UploadId","initiator","id","Initiator","ID","displayName","DisplayName","owner","Owner","storageClass","StorageClass","initiated","Initiated","parseListBucket","ListAllMyBucketsResult","Buckets","Bucket","bucket","name","Name","creationDate","CreationDate","parseBucketNotification","TopicConfiguration","QueueConfiguration","CloudFunctionConfiguration","genEvents","events","s3event","genFilterRules","filters","S3Key","FilterRule","rule","Value","NotificationConfiguration","config","Id","Topic","Event","Filter","Queue","CloudFunction","parseBucketRegion","LocationConstraint","parseListParts","parts","marker","undefined","ListPartsResult","NextPartNumberMarker","Part","p","part","PartNumber","parseInitiateMultipart","InitiateMultipartUploadResult","parseCompleteMultipart","CompleteMultipartUploadResult","Location","location","Code","Message","errCode","errMessage","parseListObjects","objects","nextMarker","ListBucketResult","Contents","content","size","Size","commonPrefix","Prefix","NextMarker","parseListObjectsV2","NextContinuationToken","nextContinuationToken","parseListObjectsV2WithMetadata","metadata","UserMetadata","parseBucketVersioningConfig","VersioningConfiguration"],"mappings":"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","sourcesContent":["/*\n * MinIO Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2015 MinIO, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fxp from 'fast-xml-parser'\nimport _ from 'lodash'\nimport * as errors from './errors.js'\n\nvar parseXml = (xml) => {\n  var result = null\n  result = fxp.parse(xml)\n  if (result.Error) {\n    throw result.Error\n  }\n\n  return result\n}\n\n// toArray returns a single element array with param being the element,\n// if param is just a string, and returns 'param' back if it is an array\n// So, it makes sure param is always an array\nvar toArray = (param) => {\n  if (!Array.isArray(param)) {\n    return Array(param)\n  }\n  return param\n}\n\n// Parse XML and return information as Javascript types\n\n// parse error XML response\nexport function parseError(xml, headerInfo) {\n  var xmlErr = {}\n  var xmlObj = fxp.parse(xml)\n  if (xmlObj.Error) {\n    xmlErr =  xmlObj.Error\n  }\n\n  var e = new errors.S3Error()\n  _.each(xmlErr, (value, key) => {\n    e[key.toLowerCase()] = value\n  })\n\n  _.each(headerInfo, (value, key) => {\n    e[key] = value\n  })\n  return e\n}\n\n// parse XML response for copy object\nexport function parseCopyObject(xml) {\n  var result = {\n    etag: \"\",\n    lastModified: \"\"\n  }\n\n  var xmlobj = parseXml(xml)\n  if (!xmlobj.CopyObjectResult) {\n    throw new errors.InvalidXMLError('Missing tag: \"CopyObjectResult\"')\n  }\n  xmlobj = xmlobj.CopyObjectResult\n  if (xmlobj.ETag) result.etag = xmlobj.ETag.replace(/^\"/g, '').replace(/\"$/g, '')\n    .replace(/^&quot;/g, '').replace(/&quot;$/g, '')\n    .replace(/^&#34;/g, '').replace(/&#34;$/g, '')\n  if (xmlobj.LastModified) result.lastModified = new Date(xmlobj.LastModified)\n\n  return result\n}\n\n// parse XML response for listing in-progress multipart uploads\nexport function parseListMultipart(xml) {\n  var result = {\n    uploads: [],\n    prefixes: [],\n    isTruncated: false\n  }\n\n  var xmlobj = parseXml(xml)\n\n  if (!xmlobj.ListMultipartUploadsResult) {\n    throw new errors.InvalidXMLError('Missing tag: \"ListMultipartUploadsResult\"')\n  }\n  xmlobj = xmlobj.ListMultipartUploadsResult\n  if (xmlobj.IsTruncated) result.isTruncated = xmlobj.IsTruncated\n  if (xmlobj.NextKeyMarker) result.nextKeyMarker =  xmlobj.NextKeyMarker\n  if (xmlobj.NextUploadIdMarker) result.nextUploadIdMarker = xmlobj.nextUploadIdMarker\n\n  if (xmlobj.CommonPrefixes) {\n    toArray(xmlobj.CommonPrefixes).forEach(prefix => {\n      result.prefixes.push({prefix: toArray(prefix)[0]})\n    })\n  }\n\n  if (xmlobj.Upload) {\n    toArray(xmlobj.Upload).forEach(upload => {\n      var key = upload.Key\n      var uploadId = upload.UploadId\n      var initiator = {id: upload.Initiator.ID, displayName: upload.Initiator.DisplayName}\n      var owner = {id: upload.Owner.ID, displayName: upload.Owner.DisplayName}\n      var storageClass = upload.StorageClass\n      var initiated = new Date(upload.Initiated)\n      result.uploads.push({key, uploadId, initiator, owner, storageClass, initiated})\n    })\n  }\n  return result\n}\n\n// parse XML response to list all the owned buckets\nexport function parseListBucket(xml) {\n  var result = []\n  var xmlobj = parseXml(xml)\n\n  if (!xmlobj.ListAllMyBucketsResult) {\n    throw new errors.InvalidXMLError('Missing tag: \"ListAllMyBucketsResult\"')\n  }\n  xmlobj = xmlobj.ListAllMyBucketsResult\n\n  if (xmlobj.Buckets) {\n    if (xmlobj.Buckets.Bucket) {\n      toArray(xmlobj.Buckets.Bucket).forEach(bucket => {\n        var name = bucket.Name\n        var creationDate = new Date(bucket.CreationDate)\n        result.push({name, creationDate})\n      })\n    }\n  }\n  return result\n}\n\n// parse XML response for bucket notification\nexport function parseBucketNotification(xml) {\n  var result = {\n    TopicConfiguration  : [],\n    QueueConfiguration  : [],\n    CloudFunctionConfiguration : [],\n  }\n  // Parse the events list\n  var genEvents = function(events) {\n    var result = []\n    if (events) {\n      toArray(events).forEach(s3event => {\n        result.push(s3event)\n      })\n    }\n    return result\n  }\n  // Parse all filter rules\n  var genFilterRules = function(filters) {\n    var result = []\n    if (filters) {\n      filters = toArray(filters)\n      if (filters[0].S3Key) {\n        filters[0].S3Key = toArray(filters[0].S3Key)\n        if (filters[0].S3Key[0].FilterRule) {\n          toArray(filters[0].S3Key[0].FilterRule).forEach(rule => {\n            var Name = toArray(rule.Name)[0]\n            var Value = toArray(rule.Value)[0]\n            result.push({Name, Value})\n          })\n        }\n      }\n    }\n    return result\n  }\n\n  var xmlobj = parseXml(xml)\n  xmlobj = xmlobj.NotificationConfiguration\n\n  // Parse all topic configurations in the xml\n  if (xmlobj.TopicConfiguration) {\n    toArray(xmlobj.TopicConfiguration).forEach(config => {\n      var Id = toArray(config.Id)[0]\n      var Topic = toArray(config.Topic)[0]\n      var Event = genEvents(config.Event)\n      var Filter = genFilterRules(config.Filter)\n      result.TopicConfiguration.push({ Id, Topic, Event, Filter})\n    })\n  }\n  // Parse all topic configurations in the xml\n  if (xmlobj.QueueConfiguration) {\n    toArray(xmlobj.QueueConfiguration).forEach(config => {\n      var Id = toArray(config.Id)[0]\n      var Queue = toArray(config.Queue)[0]\n      var Event = genEvents(config.Event)\n      var Filter = genFilterRules(config.Filter)\n      result.QueueConfiguration.push({ Id, Queue, Event, Filter})\n    })\n  }\n  // Parse all QueueConfiguration arrays\n  if (xmlobj.CloudFunctionConfiguration) {\n    toArray(xmlobj.CloudFunctionConfiguration).forEach(config => {\n      var Id = toArray(config.Id)[0]\n      var CloudFunction = toArray(config.CloudFunction)[0]\n      var Event = genEvents(config.Event)\n      var Filter = genFilterRules(config.Filter)\n      result.CloudFunctionConfiguration.push({ Id, CloudFunction, Event, Filter})\n    })\n  }\n\n  return result\n}\n\n// parse XML response for bucket region\nexport function parseBucketRegion(xml) {\n  // return region information\n  return parseXml(xml).LocationConstraint\n}\n\n// parse XML response for list parts of an in progress multipart upload\nexport function parseListParts(xml) {\n  var xmlobj = parseXml(xml)\n  var result = {\n    isTruncated: false,\n    parts: [],\n    marker: undefined\n  }\n  if (!xmlobj.ListPartsResult) {\n    throw new errors.InvalidXMLError('Missing tag: \"ListPartsResult\"')\n  }\n  xmlobj = xmlobj.ListPartsResult\n  if (xmlobj.IsTruncated) result.isTruncated = xmlobj.IsTruncated\n  if (xmlobj.NextPartNumberMarker) result.marker = +toArray(xmlobj.NextPartNumberMarker)[0]\n  if (xmlobj.Part) {\n    toArray(xmlobj.Part).forEach(p => {\n      var part = + toArray(p.PartNumber)[0]\n      var lastModified = new Date(p.LastModified)\n      var etag = p.ETag.replace(/^\"/g, '').replace(/\"$/g, '')\n        .replace(/^&quot;/g, '').replace(/&quot;$/g, '')\n        .replace(/^&#34;/g, '').replace(/&#34;$/g, '')\n      result.parts.push({part, lastModified, etag})\n    })\n  }\n  return result\n}\n\n// parse XML response when a new multipart upload is initiated\nexport function parseInitiateMultipart(xml) {\n  var xmlobj = parseXml(xml)\n\n  if (!xmlobj.InitiateMultipartUploadResult) {\n    throw new errors.InvalidXMLError('Missing tag: \"InitiateMultipartUploadResult\"')\n  }\n  xmlobj = xmlobj.InitiateMultipartUploadResult\n\n  if (xmlobj.UploadId) return xmlobj.UploadId\n  throw new errors.InvalidXMLError('Missing tag: \"UploadId\"')\n}\n\n// parse XML response when a multipart upload is completed\nexport function parseCompleteMultipart(xml) {\n  var xmlobj = parseXml(xml).CompleteMultipartUploadResult\n  if (xmlobj.Location) {\n    var location = toArray(xmlobj.Location)[0]\n    var bucket = toArray(xmlobj.Bucket)[0]\n    var key = xmlobj.Key\n    var etag = xmlobj.ETag.replace(/^\"/g, '').replace(/\"$/g, '')\n      .replace(/^&quot;/g, '').replace(/&quot;$/g, '')\n      .replace(/^&#34;/g, '').replace(/&#34;$/g, '')\n\n    return {location, bucket, key, etag}\n  }\n  // Complete Multipart can return XML Error after a 200 OK response\n  if (xmlobj.Code && xmlobj.Message) {\n    var errCode = toArray(xmlobj.Code)[0]\n    var errMessage = toArray(xmlobj.Message)[0]\n    return {errCode, errMessage}\n  }\n}\n\n// parse XML response for list objects in a bucket\nexport function parseListObjects(xml) {\n  var result = {\n    objects: [],\n    isTruncated: false\n  }\n  var nextMarker\n  var xmlobj = parseXml(xml)\n\n  if (!xmlobj.ListBucketResult) {\n    throw new errors.InvalidXMLError('Missing tag: \"ListBucketResult\"')\n  }\n  xmlobj = xmlobj.ListBucketResult\n  if (xmlobj.IsTruncated) result.isTruncated = xmlobj.IsTruncated\n  if (xmlobj.Contents) {\n    toArray(xmlobj.Contents).forEach(content => {\n      var name = toArray(content.Key)[0]\n      var lastModified = new Date(toArray(content.LastModified)[0])\n      var etag = toArray(content.ETag)[0].replace(/^\"/g, '').replace(/\"$/g, '')\n        .replace(/^&quot;/g, '').replace(/&quot;$/g, '')\n        .replace(/^&#34;/g, '').replace(/&#34;$/g, '')\n      var size = content.Size\n      result.objects.push({name, lastModified, etag, size})\n      nextMarker = name\n    })\n  }\n\n  if (xmlobj.CommonPrefixes) {\n    toArray(xmlobj.CommonPrefixes).forEach(commonPrefix => {\n      var prefix = toArray(commonPrefix.Prefix)[0]\n      var size = 0\n      result.objects.push({prefix, size})\n    })\n  }\n  if (result.isTruncated) {\n    result.nextMarker = xmlobj.NextMarker ? toArray(xmlobj.NextMarker)[0]: nextMarker\n  }\n  return result\n}\n\n// parse XML response for list objects v2 in a bucket\nexport function parseListObjectsV2(xml) {\n  var result = {\n    objects: [],\n    isTruncated: false\n  }\n  var xmlobj = parseXml(xml)\n  if (!xmlobj.ListBucketResult) {\n    throw new errors.InvalidXMLError('Missing tag: \"ListBucketResult\"')\n  }\n  xmlobj = xmlobj.ListBucketResult\n  if (xmlobj.IsTruncated) result.isTruncated = xmlobj.IsTruncated\n  if (xmlobj.NextContinuationToken) result.nextContinuationToken = xmlobj.NextContinuationToken\n  if (xmlobj.Contents) {\n    toArray(xmlobj.Contents).forEach(content => {\n      var name = content.Key\n      var lastModified = new Date(content.LastModified)\n      var etag = content.ETag.replace(/^\"/g, '').replace(/\"$/g, '')\n        .replace(/^&quot;/g, '').replace(/&quot;$/g, '')\n        .replace(/^&#34;/g, '').replace(/&#34;$/g, '')\n      var size = content.Size\n      result.objects.push({name, lastModified, etag, size})\n    })\n  }\n  if (xmlobj.CommonPrefixes) {\n    toArray(xmlobj.CommonPrefixes).forEach(commonPrefix => {\n      var prefix = toArray(commonPrefix.Prefix)[0]\n      var size = 0\n      result.objects.push({prefix, size})\n    })\n  }\n  return result\n}\n\n// parse XML response for list objects v2 with metadata in a bucket\nexport function parseListObjectsV2WithMetadata(xml) {\n  var result = {\n    objects: [],\n    isTruncated: false\n  }\n  var xmlobj = parseXml(xml)\n  if (!xmlobj.ListBucketResult) {\n    throw new errors.InvalidXMLError('Missing tag: \"ListBucketResult\"')\n  }\n  xmlobj = xmlobj.ListBucketResult\n  if (xmlobj.IsTruncated) result.isTruncated = xmlobj.IsTruncated\n  if (xmlobj.NextContinuationToken) result.nextContinuationToken = xmlobj.NextContinuationToken\n\n  if (xmlobj.Contents) {\n    toArray(xmlobj.Contents).forEach(content => {\n      var name = content.Key\n      var lastModified = new Date(content.LastModified)\n      var etag = content.ETag.replace(/^\"/g, '').replace(/\"$/g, '')\n        .replace(/^&quot;/g, '').replace(/&quot;$/g, '')\n        .replace(/^&#34;/g, '').replace(/&#34;$/g, '')\n      var size = content.Size\n      var metadata\n      if (content.UserMetadata != null) {\n        metadata = toArray(content.UserMetadata)[0]\n      } else {\n        metadata = null\n      }\n      result.objects.push({name, lastModified, etag, size, metadata})\n    })\n  }\n\n  if (xmlobj.CommonPrefixes) {\n    toArray(xmlobj.CommonPrefixes).forEach(commonPrefix => {\n      var prefix = toArray(commonPrefix.Prefix)[0]\n      var size = 0\n      result.objects.push({prefix, size})\n    })\n  }\n  return result\n}\n\nexport function parseBucketVersioningConfig(xml){\n  var xmlObj = parseXml(xml)\n  return xmlObj.VersioningConfiguration\n}"],"file":"xml-parsers.js"}