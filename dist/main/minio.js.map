{"version":3,"sources":["minio.js"],"names":["Package","require","Client","params","secure","Error","useSSL","port","endPoint","errors","InvalidEndpointError","InvalidArgumentError","region","host","toLowerCase","protocol","transport","Http","Https","libraryComments","process","platform","arch","libraryAgent","version","accessKey","secretKey","sessionToken","userAgent","pathStyle","undefined","anonymous","regionMap","partSize","overRidePartSize","maximumPartSize","maxObjectSize","enableSHA256","reqOptions","options","TypeError","_","pick","opts","method","bucketName","objectName","headers","query","virtualHostStyle","path","map","v","k","Object","assign","appName","appVersion","trim","size","response","err","logStream","logHeaders","forEach","redacter","RegExp","replace","write","statusCode","errJSON","JSON","stringify","stream","stdout","payload","returnResponse","cb","length","sha256sum","Crypto","createHash","update","digest","makeRequestStream","_makeRequest","e","getRequestOptions","date","Date","authorization","req","request","errorTransformer","transformers","getErrorTransformer","on","logHTTP","pipe","getBucketRegion","InvalidBucketNameError","extractRegion","transformer","getBucketRegionTransformer","data","window","makeRequest","name","Region","createBucketConfiguration","push","_attr","xmlns","LocationConstraint","payloadObject","CreateBucketConfiguration","getListBucketTransformer","buckets","result","bucket","prefix","recursive","InvalidPrefixError","delimiter","keyMarker","uploadIdMarker","uploads","ended","readStream","Stream","Readable","objectMode","_read","shift","listIncompleteUploadsQuery","emit","prefixes","async","eachSeries","upload","listParts","key","uploadId","parts","reduce","acc","item","isTruncated","nextKeyMarker","nextUploadIdMarker","code","isValidBucketNameError","InvalidObjectNameError","removeUploadId","during","findUploadId","filePath","getOpts","partFile","partFileStream","objStat","rename","fs","waterfall","statObject","dirname","ignore","etag","stat","stats","offset","createWriteStream","flags","getPartialObject","downloadStream","range","expectedStatus","querystring","metaData","callback","multipart","uploader","getUploader","hash","getHashSummer","start","end","autoClose","createReadStream","md5sum","objInfo","etags","initiateNewMultipartUpload","calculatePartSize","part","partsDone","partNumber","uploadedSize","whilst","md5sumHex","Buffer","from","toString","completeMultipartUpload","rest","chunker","BlockStream2","zeroPadding","ObjectUploader","arg1","arg2","arg3","arg4","arg5","srcObject","conditions","CopyConditions","modified","unmodified","matchETag","matchEtagExcept","matchETagExcept","getCopyObjectTransformer","marker","maxKeys","queries","sort","join","getListObjectsTransformer","objects","listObjectsQuery","nextMarker","continuationToken","startAfter","getListObjectsV2Transformer","listObjectsV2Query","nextContinuationToken","statOpts","lastModified","versionId","removeOpts","requestOptions","objectsList","maxEntries","entry","list","listOfList","encoder","util","TextEncoder","deleteObjects","value","encode","md5digest","policy","getConcater","InvalidBucketPolicyError","expires","reqParams","requestDate","AnonymousRequestError","url","pe","respHeaders","validRespHeaders","header","presignedUrl","PostPolicy","postPolicy","formData","dateStr","expiration","setSeconds","setExpires","policyBase64","signature","portStr","urlStr","postURL","getInitiateMultipartTransformer","element","Part","PartNumber","ETag","CompleteMultipartUpload","getCompleteMultipartTransformer","errCode","S3Error","errMessage","listNext","listPartsQuery","concat","getListPartsTransformer","maxUploads","unshift","getListMultipartTransformer","latestUpload","initiated","getTime","validate","simpleUploader","args","multipartUploader","config","builder","xml2js","Builder","rootName","renderOpts","headless","buildObject","setBucketNotification","NotificationConfig","getBucketNotificationTransformer","bucketNotification","suffix","events","listener","NotificationPoller","versionConfig","bucketVersioningTransformer","keys","clientExtensions","extensions","prototype","makeBucket","listBuckets","bucketExists","removeBucket","getObject","fGetObject","putObject","fPutObject","copyObject","removeObject","removeObjects","presignedGetObject","presignedPutObject","presignedPostPolicy","getBucketNotification","removeAllBucketNotification","getBucketPolicy","setBucketPolicy","removeIncompleteUpload","getBucketVersioning","setBucketVersioning","toUTCString","InvalidDateError","toISOString","type","min","max"],"mappings":"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","sourcesContent":["/*\n * MinIO Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2015 MinIO, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs'\nimport Crypto from 'crypto'\nimport Http from 'http'\nimport Https from 'https'\nimport Stream from 'stream'\nimport BlockStream2 from 'block-stream2'\nimport Xml from 'xml'\nimport xml2js from 'xml2js'\nimport async from 'async'\nimport querystring from 'querystring'\nimport mkdirp from 'mkdirp'\nimport path from 'path'\nimport _ from 'lodash'\nimport util from 'util'\n\nimport {\n  extractMetadata, prependXAMZMeta, isValidPrefix, isValidEndpoint, isValidBucketName,\n  isValidPort, isValidObjectName, isAmazonEndpoint, getScope,\n  uriEscape, uriResourceEscape, isBoolean, isFunction, isNumber,\n  isString, isObject, isArray, isValidDate, pipesetup,\n  readableStream, isReadableStream, isVirtualHostStyle,\n  insertContentType, makeDateLong, promisify, getVersionId, sanitizeETag\n} from './helpers.js'\n\nimport { signV4, presignSignatureV4, postPresignSignatureV4 } from './signing.js'\n\nimport ObjectUploader from './object-uploader'\n\nimport * as transformers from './transformers'\n\nimport * as errors from './errors.js'\n\nimport { getS3Endpoint } from './s3-endpoints.js'\n\nimport { NotificationConfig, NotificationPoller } from './notification'\n\nimport extensions from './extensions'\n\nvar Package = require('../../package.json')\n\nexport class Client {\n  constructor(params) {\n    if (typeof params.secure !== 'undefined') throw new Error('\"secure\" option deprecated, \"useSSL\" should be used instead')\n    // Default values if not specified.\n    if (typeof params.useSSL === 'undefined') params.useSSL = true\n    if (!params.port) params.port = 0\n    // Validate input params.\n    if (!isValidEndpoint(params.endPoint)) {\n      throw new errors.InvalidEndpointError(`Invalid endPoint : ${params.endPoint}`)\n    }\n    if (!isValidPort(params.port)) {\n      throw new errors.InvalidArgumentError(`Invalid port : ${params.port}`)\n    }\n    if (!isBoolean(params.useSSL)) {\n      throw new errors.InvalidArgumentError(`Invalid useSSL flag type : ${params.useSSL}, expected to be of type \"boolean\"`)\n    }\n\n    // Validate region only if its set.\n    if (params.region) {\n      if (!isString(params.region)) {\n        throw new errors.InvalidArgumentError(`Invalid region : ${params.region}`)\n      }\n    }\n\n    var host = params.endPoint.toLowerCase()\n    var port = params.port\n    var protocol = ''\n    var transport\n    // Validate if configuration is not using SSL\n    // for constructing relevant endpoints.\n    if (params.useSSL === false) {\n      transport = Http\n      protocol = 'http:'\n      if (port === 0) {\n        port = 80\n      }\n    } else {\n      // Defaults to secure.\n      transport = Https\n      protocol = 'https:'\n      if (port === 0) {\n        port = 443\n      }\n    }\n\n    // if custom transport is set, use it.\n    if (params.transport) {\n      if (!isObject(params.transport)) {\n        throw new errors.InvalidArgumentError('Invalid transport type : ${params.transport}, expected to be type \"object\"')\n      }\n      transport = params.transport\n    }\n\n    // User Agent should always following the below style.\n    // Please open an issue to discuss any new changes here.\n    //\n    //       MinIO (OS; ARCH) LIB/VER APP/VER\n    //\n    var libraryComments = `(${process.platform}; ${process.arch})`\n    var libraryAgent = `MinIO ${libraryComments} minio-js/${Package.version}`\n    // User agent block ends.\n\n    this.transport = transport\n    this.host = host\n    this.port = port\n    this.protocol = protocol\n    this.accessKey = params.accessKey\n    this.secretKey = params.secretKey\n    this.sessionToken = params.sessionToken\n    this.userAgent = `${libraryAgent}`\n\n    // Default path style is true\n    if (params.pathStyle === undefined) {\n      this.pathStyle = true\n    } else {\n      this.pathStyle = params.pathStyle\n    }\n\n    if (!this.accessKey) this.accessKey = ''\n    if (!this.secretKey) this.secretKey = ''\n    this.anonymous = !this.accessKey || !this.secretKey\n\n    this.regionMap = {}\n    if (params.region) {\n      this.region = params.region\n    }\n\n    this.partSize = 64*1024*1024\n    if (params.partSize) {\n      this.partSize = params.partSize\n      this.overRidePartSize = true\n    }\n    if (this.partSize < 5*1024*1024) {\n      throw new errors.InvalidArgumentError(`Part size should be greater than 5MB`)\n    }\n    if (this.partSize > 5*1024*1024*1024) {\n      throw new errors.InvalidArgumentError(`Part size should be less than 5GB`)\n    }\n\n    this.maximumPartSize = 5*1024*1024*1024\n    this.maxObjectSize = 5*1024*1024*1024*1024\n    // SHA256 is enabled only for authenticated http requests. If the request is authenticated\n    // and the connection is https we use x-amz-content-sha256=UNSIGNED-PAYLOAD\n    // header for signature calculation.\n    this.enableSHA256 = !this.anonymous && !params.useSSL\n\n    this.reqOptions = {}\n  }\n\n  // Sets the supported request options.\n  setRequestOptions(options) {\n    if (!isObject(options)) {\n      throw new TypeError('request options should be of type \"object\"')\n    }\n    this.reqOptions = _.pick(options, ['agent', 'ca', 'cert', 'ciphers', 'clientCertEngine', 'crl', 'dhparam', 'ecdhCurve', 'family', 'honorCipherOrder', 'key', 'passphrase', 'pfx', 'rejectUnauthorized', 'secureOptions', 'secureProtocol', 'servername', 'sessionIdContext'])\n  }\n\n  // returns *options* object that can be used with http.request()\n  // Takes care of constructing virtual-host-style or path-style hostname\n  getRequestOptions(opts) {\n    var method = opts.method\n    var region = opts.region\n    var bucketName = opts.bucketName\n    var objectName = opts.objectName\n    var headers = opts.headers\n    var query = opts.query\n\n    var reqOptions = {method}\n    reqOptions.headers = {}\n\n    // Verify if virtual host supported.\n    var virtualHostStyle\n    if (bucketName) {\n      virtualHostStyle = isVirtualHostStyle(this.host, this.protocol, bucketName, this.pathStyle)\n    }\n\n    if (this.port) reqOptions.port = this.port\n    reqOptions.protocol = this.protocol\n\n    if (objectName) {\n      objectName = `${uriResourceEscape(objectName)}`\n    }\n\n    reqOptions.path = '/'\n\n    // Save host.\n    reqOptions.host = this.host\n    // For Amazon S3 endpoint, get endpoint based on region.\n    if (isAmazonEndpoint(reqOptions.host)) {\n      reqOptions.host = getS3Endpoint(region)\n    }\n\n    if (virtualHostStyle && !opts.pathStyle) {\n      // For all hosts which support virtual host style, `bucketName`\n      // is part of the hostname in the following format:\n      //\n      //  var host = 'bucketName.example.com'\n      //\n      if (bucketName) reqOptions.host = `${bucketName}.${reqOptions.host}`\n      if (objectName) reqOptions.path = `/${objectName}`\n    } else {\n      // For all S3 compatible storage services we will fallback to\n      // path style requests, where `bucketName` is part of the URI\n      // path.\n      if (bucketName) reqOptions.path = `/${bucketName}`\n      if (objectName) reqOptions.path = `/${bucketName}/${objectName}`\n    }\n\n    if (query) reqOptions.path += `?${query}`\n    reqOptions.headers.host = reqOptions.host\n    if ((reqOptions.protocol === 'http:' && reqOptions.port !== 80) ||\n        (reqOptions.protocol === 'https:' && reqOptions.port !== 443)) {\n      reqOptions.headers.host = `${reqOptions.host}:${reqOptions.port}`\n    }\n    reqOptions.headers['user-agent'] = this.userAgent\n    if (headers) {\n      // have all header keys in lower case - to make signing easy\n      _.map(headers, (v, k) => reqOptions.headers[k.toLowerCase()] = v)\n    }\n\n    // Use any request option specified in minioClient.setRequestOptions()\n    reqOptions = Object.assign({}, this.reqOptions, reqOptions)\n\n    return reqOptions\n  }\n\n  // Set application specific information.\n  //\n  // Generates User-Agent in the following style.\n  //\n  //       MinIO (OS; ARCH) LIB/VER APP/VER\n  //\n  // __Arguments__\n  // * `appName` _string_ - Application name.\n  // * `appVersion` _string_ - Application version.\n  setAppInfo(appName, appVersion) {\n    if (!isString(appName)) {\n      throw new TypeError(`Invalid appName: ${appName}`)\n    }\n    if (appName.trim() === '') {\n      throw new errors.InvalidArgumentError('Input appName cannot be empty.')\n    }\n    if (!isString(appVersion)) {\n      throw new TypeError(`Invalid appVersion: ${appVersion}`)\n    }\n    if (appVersion.trim() === '') {\n      throw new errors.InvalidArgumentError('Input appVersion cannot be empty.')\n    }\n    this.userAgent = `${this.userAgent} ${appName}/${appVersion}`\n  }\n\n  // Calculate part size given the object size. Part size will be atleast this.partSize\n  calculatePartSize(size) {\n    if (!isNumber(size)) {\n      throw new TypeError('size should be of type \"number\"')\n    }\n    if (size > this.maxObjectSize) {\n      throw new TypeError(`size should not be more than ${this.maxObjectSize}`)\n    }\n    if (this.overRidePartSize) {\n      return this.partSize\n    }\n    var partSize = this.partSize\n    for (;;) { \t\t\t// while(true) {...} throws linting error.\n      // If partSize is big enough to accomodate the object size, then use it.\n      if ((partSize * 10000) > size) {\n        return partSize\n      }\n      // Try part sizes as 64MB, 80MB, 96MB etc.\n      partSize += 16*1024*1024\n    }\n  }\n\n  // log the request, response, error\n  logHTTP(reqOptions, response, err) {\n    // if no logstreamer available return.\n    if (!this.logStream) return\n    if (!isObject(reqOptions)) {\n      throw new TypeError('reqOptions should be of type \"object\"')\n    }\n    if (response && !isReadableStream(response)) {\n      throw new TypeError('response should be of type \"Stream\"')\n    }\n    if (err && !(err instanceof Error)) {\n      throw new TypeError('err should be of type \"Error\"')\n    }\n    var logHeaders = (headers) => {\n      _.forEach(headers, (v, k) => {\n        if (k == 'authorization') {\n          var redacter = new RegExp('Signature=([0-9a-f]+)')\n          v = v.replace(redacter, 'Signature=**REDACTED**')\n        }\n        this.logStream.write(`${k}: ${v}\\n`)\n      })\n      this.logStream.write('\\n')\n    }\n    this.logStream.write(`REQUEST: ${reqOptions.method} ${reqOptions.path}\\n`)\n    logHeaders(reqOptions.headers)\n    if (response) {\n      this.logStream.write(`RESPONSE: ${response.statusCode}\\n`)\n      logHeaders(response.headers)\n    }\n    if (err) {\n      this.logStream.write('ERROR BODY:\\n')\n      var errJSON = JSON.stringify(err, null, '\\t')\n      this.logStream.write(`${errJSON}\\n`)\n    }\n  }\n\n  // Enable tracing\n  traceOn(stream) {\n    if (!stream) stream = process.stdout\n    this.logStream = stream\n  }\n\n  // Disable tracing\n  traceOff() {\n    this.logStream = null\n  }\n\n  // makeRequest is the primitive used by the apis for making S3 requests.\n  // payload can be empty string in case of no payload.\n  // statusCode is the expected statusCode. If response.statusCode does not match\n  // we parse the XML error and call the callback with the error message.\n  // A valid region is passed by the calls - listBuckets, makeBucket and\n  // getBucketRegion.\n  makeRequest(options, payload, statusCode, region, returnResponse, cb) {\n    if (!isObject(options)) {\n      throw new TypeError('options should be of type \"object\"')\n    }\n    if (!isString(payload) && !isObject(payload)) {\n      // Buffer is of type 'object'\n      throw new TypeError('payload should be of type \"string\" or \"Buffer\"')\n    }\n    if (!isNumber(statusCode)) {\n      throw new TypeError('statusCode should be of type \"number\"')\n    }\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isBoolean(returnResponse)) {\n      throw new TypeError('returnResponse should be of type \"boolean\"')\n    }\n    if(!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    if (!options.headers) options.headers = {}\n    if (options.method === 'POST' || options.method === 'PUT' || options.method === 'DELETE') {\n      options.headers['content-length'] = payload.length\n    }\n    var sha256sum = ''\n    if (this.enableSHA256) sha256sum = Crypto.createHash('sha256').update(payload).digest('hex')\n    var stream = readableStream(payload)\n    this.makeRequestStream(options, stream, sha256sum, statusCode, region, returnResponse, cb)\n  }\n\n  // makeRequestStream will be used directly instead of makeRequest in case the payload\n  // is available as a stream. for ex. putObject\n  makeRequestStream(options, stream, sha256sum, statusCode, region, returnResponse, cb) {\n    if (!isObject(options)) {\n      throw new TypeError('options should be of type \"object\"')\n    }\n    if (!isReadableStream(stream)) {\n      throw new errors.InvalidArgumentError('stream should be a readable Stream')\n    }\n    if (!isString(sha256sum)) {\n      throw new TypeError('sha256sum should be of type \"string\"')\n    }\n    if (!isNumber(statusCode)) {\n      throw new TypeError('statusCode should be of type \"number\"')\n    }\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isBoolean(returnResponse)) {\n      throw new TypeError('returnResponse should be of type \"boolean\"')\n    }\n    if(!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    // sha256sum will be empty for anonymous or https requests\n    if (!this.enableSHA256 && sha256sum.length !== 0) {\n      throw new errors.InvalidArgumentError(`sha256sum expected to be empty for anonymous or https requests`)\n    }\n    // sha256sum should be valid for non-anonymous http requests.\n    if (this.enableSHA256 && sha256sum.length !== 64) {\n      throw new errors.InvalidArgumentError(`Invalid sha256sum : ${sha256sum}`)\n    }\n\n    var _makeRequest = (e, region) => {\n      if (e) return cb(e)\n      options.region = region\n      var reqOptions = this.getRequestOptions(options)\n      if (!this.anonymous) {\n        // For non-anonymous https requests sha256sum is 'UNSIGNED-PAYLOAD' for signature calculation.\n        if (!this.enableSHA256) sha256sum = 'UNSIGNED-PAYLOAD'\n\n        let date = new Date()\n\n        reqOptions.headers['x-amz-date'] = makeDateLong(date)\n        reqOptions.headers['x-amz-content-sha256'] = sha256sum\n        if (this.sessionToken) {\n          reqOptions.headers['x-amz-security-token'] = this.sessionToken\n        }\n\n        var authorization = signV4(reqOptions, this.accessKey, this.secretKey, region, date)\n        reqOptions.headers.authorization = authorization\n      }\n      var req = this.transport.request(reqOptions, response => {\n        if (statusCode !== response.statusCode) {\n          // For an incorrect region, S3 server always sends back 400.\n          // But we will do cache invalidation for all errors so that,\n          // in future, if AWS S3 decides to send a different status code or\n          // XML error code we will still work fine.\n          delete(this.regionMap[options.bucketName])\n          var errorTransformer = transformers.getErrorTransformer(response)\n          pipesetup(response, errorTransformer)\n            .on('error', e => {\n              this.logHTTP(reqOptions, response, e)\n              cb(e)\n            })\n          return\n        }\n        this.logHTTP(reqOptions, response)\n        if (returnResponse) return cb(null, response)\n        // We drain the socket so that the connection gets closed. Note that this\n        // is not expensive as the socket will not have any data.\n        response.on('data', ()=>{})\n        cb(null)\n      })\n      let pipe = pipesetup(stream, req)\n      pipe.on('error', e => {\n        this.logHTTP(reqOptions, null, e)\n        cb(e)\n      })\n    }\n    if (region) return _makeRequest(null, region)\n    this.getBucketRegion(options.bucketName, _makeRequest)\n  }\n\n  // gets the region of the bucket\n  getBucketRegion(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name : ${bucketName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n\n    // Region is set with constructor, return the region right here.\n    if (this.region) return cb(null, this.region)\n\n    if (this.regionMap[bucketName]) return cb(null, this.regionMap[bucketName])\n    var extractRegion = (response) => {\n      var transformer = transformers.getBucketRegionTransformer()\n      var region = 'us-east-1'\n      pipesetup(response, transformer)\n        .on('error', cb)\n        .on('data', data => {\n          if (data) region = data\n        })\n        .on('end', () => {\n          this.regionMap[bucketName] = region\n          cb(null, region)\n        })\n    }\n\n    var method = 'GET'\n    var query = 'location'\n\n    // `getBucketLocation` behaves differently in following ways for\n    // different environments.\n    //\n    // - For nodejs env we default to path style requests.\n    // - For browser env path style requests on buckets yields CORS\n    //   error. To circumvent this problem we make a virtual host\n    //   style request signed with 'us-east-1'. This request fails\n    //   with an error 'AuthorizationHeaderMalformed', additionally\n    //   the error XML also provides Region of the bucket. To validate\n    //   this region is proper we retry the same request with the newly\n    //   obtained region.\n    var pathStyle = this.pathStyle && typeof window === 'undefined'\n\n    this.makeRequest({method, bucketName, query, pathStyle}, '', 200, 'us-east-1', true, (e, response) => {\n      if (e) {\n        if (e.name === 'AuthorizationHeaderMalformed') {\n          var region = e.Region\n          if (!region) return cb(e)\n          this.makeRequest({method, bucketName, query}, '', 200, region, true, (e, response) => {\n            if (e) return cb(e)\n            extractRegion(response)\n          })\n          return\n        }\n        return cb(e)\n      }\n      extractRegion(response)\n    })\n  }\n\n  // Creates the bucket `bucketName`.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ - Name of the bucket\n  // * `region` _string_ - region valid values are _us-west-1_, _us-west-2_,  _eu-west-1_, _eu-central-1_, _ap-southeast-1_, _ap-northeast-1_, _ap-southeast-2_, _sa-east-1_.\n  // * `callback(err)` _function_ - callback function with `err` as the error argument. `err` is null if the bucket is successfully created.\n  makeBucket(bucketName, region, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n\n    if (isFunction(region)) {\n      cb = region\n      region = ''\n    }\n\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var payload = ''\n\n    // Region already set in constructor, validate if\n    // caller requested bucket location is same.\n    if (region && this.region) {\n      if (region !== this.region) {\n        throw new errors.InvalidArgumentError(`Configured region ${this.region}, requested ${region}`)\n      }\n    }\n\n    // sending makeBucket request with XML containing 'us-east-1' fails. For\n    // default region server expects the request without body\n    if (region && region !== 'us-east-1') {\n      var createBucketConfiguration = []\n      createBucketConfiguration.push({\n        _attr: {\n          xmlns: 'http://s3.amazonaws.com/doc/2006-03-01/'\n        }\n      })\n      createBucketConfiguration.push({\n        LocationConstraint: region\n      })\n      var payloadObject = {\n        CreateBucketConfiguration: createBucketConfiguration\n      }\n      payload = Xml(payloadObject)\n    }\n    var method = 'PUT'\n    var headers = {}\n    if (!region) region = 'us-east-1'\n    this.makeRequest({method, bucketName, headers}, payload, 200, region, false, cb)\n  }\n\n  // List of buckets created.\n  //\n  // __Arguments__\n  // * `callback(err, buckets)` _function_ - callback function with error as the first argument. `buckets` is an array of bucket information\n  //\n  // `buckets` array element:\n  // * `bucket.name` _string_ : bucket name\n  // * `bucket.creationDate` _Date_: date when bucket was created\n  listBuckets(cb) {\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'GET'\n    this.makeRequest({method}, '', 200, 'us-east-1', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getListBucketTransformer()\n      var buckets\n      pipesetup(response, transformer)\n        .on('data', result => buckets = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, buckets))\n    })\n  }\n\n  // Returns a stream that emits objects that are partially uploaded.\n  //\n  // __Arguments__\n  // * `bucketname` _string_: name of the bucket\n  // * `prefix` _string_: prefix of the object names that are partially uploaded (optional, default `''`)\n  // * `recursive` _bool_: directory style listing when false, recursive listing when true (optional, default `false`)\n  //\n  // __Return Value__\n  // * `stream` _Stream_ : emits objects of the format:\n  //   * `object.key` _string_: name of the object\n  //   * `object.uploadId` _string_: upload ID of the object\n  //   * `object.size` _Integer_: size of the partially uploaded object\n  listIncompleteUploads(bucket, prefix, recursive) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (!isValidBucketName(bucket)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucket)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    var delimiter = recursive ? '' : '/'\n    var keyMarker = ''\n    var uploadIdMarker = ''\n    var uploads = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one upload info per _read()\n      if (uploads.length) {\n        return readStream.push(uploads.shift())\n      }\n      if (ended) return readStream.push(null)\n      this.listIncompleteUploadsQuery(bucket, prefix, keyMarker, uploadIdMarker, delimiter)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          result.prefixes.forEach(prefix => uploads.push(prefix))\n          async.eachSeries(result.uploads, (upload, cb) => {\n            // for each incomplete upload add the sizes of its uploaded parts\n            this.listParts(bucket, upload.key, upload.uploadId, (err, parts) => {\n              if (err) return cb(err)\n              upload.size = parts.reduce((acc, item) => acc + item.size, 0)\n              uploads.push(upload)\n              cb()\n            })\n          }, err => {\n            if (err) {\n              readStream.emit('error', err)\n              return\n            }\n            if (result.isTruncated) {\n              keyMarker = result.nextKeyMarker\n              uploadIdMarker = result.nextUploadIdMarker\n            } else {\n              ended = true\n            }\n            readStream._read()\n          })\n        })\n    }\n    return readStream\n  }\n\n  // To check if a bucket already exists.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ : name of the bucket\n  // * `callback(err)` _function_ : `err` is `null` if the bucket exists\n  bucketExists(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'HEAD'\n    this.makeRequest({method, bucketName}, '', 200, '', false, err => {\n      if (err) {\n        if (err.code == 'NoSuchBucket' || err.code == 'NotFound') return cb(null, false)\n        return cb(err)\n      }\n      cb(null, true)\n    })\n  }\n\n  // Remove a bucket.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ : name of the bucket\n  // * `callback(err)` _function_ : `err` is `null` if the bucket is removed successfully.\n  removeBucket(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'DELETE'\n    this.makeRequest({method, bucketName}, '', 204, '', false, (e) => {\n      // If the bucket was successfully removed, remove the region map entry.\n      if (!e) delete(this.regionMap[bucketName])\n      cb(e)\n    })\n  }\n\n  // Remove the partially uploaded object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `callback(err)` _function_: callback function is called with non `null` value in case of error\n  removeIncompleteUpload(bucketName, objectName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.isValidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var removeUploadId\n    async.during(\n      cb => {\n        this.findUploadId(bucketName, objectName, (e, uploadId) => {\n          if (e) return cb(e)\n          removeUploadId = uploadId\n          cb(null, uploadId)\n        })\n      },\n      cb => {\n        var method = 'DELETE'\n        var query = `uploadId=${removeUploadId}`\n        this.makeRequest({method, bucketName, objectName, query}, '', 204, '', false, e => cb(e))\n      },\n      cb\n    )\n  }\n\n  // Callback is called with `error` in case of error or `null` in case of success\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `filePath` _string_: path to which the object data will be written to\n  // * `getOpts` _object_: Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional)\n  // * `callback(err)` _function_: callback is called with `err` in case of error.\n  fGetObject(bucketName, objectName, filePath, getOpts={}, cb) {\n    // Input validation.\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(filePath)) {\n      throw new TypeError('filePath should be of type \"string\"')\n    }\n    // Backward Compatibility\n    if (isFunction(getOpts)) {\n      cb = getOpts\n      getOpts = {}\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    // Internal data.\n    var partFile\n    var partFileStream\n    var objStat\n\n    // Rename wrapper.\n    var rename = err => {\n      if (err) return cb(err)\n      fs.rename(partFile, filePath, cb)\n    }\n\n    async.waterfall([\n      cb => this.statObject(bucketName, objectName, getOpts, cb),\n      (result, cb) => {\n        objStat = result\n        // Create any missing top level directories.\n        mkdirp(path.dirname(filePath), cb)\n      },\n      (ignore, cb) => {\n        partFile = `${filePath}.${objStat.etag}.part.minio`\n        fs.stat(partFile, (e, stats) => {\n          var offset = 0\n          if (e) {\n            partFileStream = fs.createWriteStream(partFile, {flags: 'w'})\n          } else {\n            if (objStat.size === stats.size) return rename()\n            offset = stats.size\n            partFileStream = fs.createWriteStream(partFile, {flags: 'a'})\n          }\n          this.getPartialObject(bucketName, objectName, offset, 0, getOpts, cb)\n        })\n      },\n      (downloadStream, cb) => {\n        pipesetup(downloadStream, partFileStream)\n          .on('error', e => cb(e))\n          .on('finish', cb)\n      },\n      cb => fs.stat(partFile, cb),\n      (stats, cb) => {\n        if (stats.size === objStat.size) return cb()\n        cb(new Error('Size mismatch between downloaded file and the object'))\n      }\n    ], rename)\n  }\n\n  // Callback is called with readable stream of the object content.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `getOpts` _object_: Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional)\n  // * `callback(err, stream)` _function_: callback is called with `err` in case of error. `stream` is the object content stream\n  getObject(bucketName, objectName, getOpts={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    // Backward Compatibility\n    if (isFunction(getOpts)) {\n      cb = getOpts\n      getOpts = {}\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    this.getPartialObject(bucketName, objectName, 0, 0, getOpts, cb)\n  }\n\n  // Callback is called with readable stream of the partial object content.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `offset` _number_: offset of the object from where the stream will start\n  // * `length` _number_: length of the object that will be read in the stream (optional, if not specified we read the rest of the file from the offset)\n  // * `getOpts` _object_: Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional)\n  // * `callback(err, stream)` _function_: callback is called with `err` in case of error. `stream` is the object content stream\n  getPartialObject(bucketName, objectName, offset, length, getOpts={}, cb) {\n    if (isFunction(length)) {\n      cb = length\n      length = 0\n    }\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isNumber(offset)) {\n      throw new TypeError('offset should be of type \"number\"')\n    }\n    if (!isNumber(length)) {\n      throw new TypeError('length should be of type \"number\"')\n    }\n    // Backward Compatibility\n    if (isFunction(getOpts)) {\n      cb = getOpts\n      getOpts = {}\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var range = ''\n    if (offset || length) {\n      if (offset) {\n        range = `bytes=${+offset}-`\n      } else {\n        range = 'bytes=0-'\n        offset = 0\n      }\n      if (length) {\n        range += `${(+length + offset) - 1}`\n      }\n    }\n\n    var headers = {}\n    if (range !== '') {\n      headers.range = range\n    }\n\n    var expectedStatus = 200\n    if (range) {\n      expectedStatus = 206\n    }\n    var method = 'GET'\n\n    var query = querystring.stringify(getOpts)\n    this.makeRequest({method, bucketName, objectName, headers, query}, '', expectedStatus, '', true, cb)\n  }\n\n  // Uploads the object using contents from a file\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `filePath` _string_: file path of the file to be uploaded\n  // * `metaData` _Javascript Object_: metaData assosciated with the object\n  // * `callback(err, objInfo)` _function_: non null `err` indicates error, `objInfo` _object_ which contains versionId and etag.\n  fPutObject(bucketName, objectName, filePath, metaData, callback) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    if (!isString(filePath)) {\n      throw new TypeError('filePath should be of type \"string\"')\n    }\n    if (isFunction(metaData)) {\n      callback = metaData\n      metaData = {} // Set metaData empty if no metaData provided.\n    }\n    if (!isObject(metaData)) {\n      throw new TypeError('metaData should be of type \"object\"')\n    }\n\n    // Inserts correct `content-type` attribute based on metaData and filePath\n    metaData = insertContentType(metaData, filePath)\n\n    //Updates metaData to have the correct prefix if needed\n    metaData = prependXAMZMeta(metaData)\n    var size\n    var partSize\n\n    async.waterfall([\n      cb => fs.stat(filePath, cb),\n      (stats, cb) => {\n        size = stats.size\n        if (size > this.maxObjectSize) {\n          return cb(new Error(`${filePath} size : ${stats.size}, max allowed size : 5TB`))\n        }\n        if (size <= this.partSize) {\n          // simple PUT request, no multipart\n          var multipart = false\n          var uploader = this.getUploader(bucketName, objectName, metaData, multipart)\n          var hash = transformers.getHashSummer(this.enableSHA256)\n          var start = 0\n          var end = size - 1\n          var autoClose = true\n          if (size === 0) end = 0\n          var options = {start, end, autoClose}\n          pipesetup(fs.createReadStream(filePath, options), hash)\n            .on('data', data => {\n              var md5sum = data.md5sum\n              var sha256sum = data.sha256sum\n              var stream = fs.createReadStream(filePath, options)\n              uploader(stream, size, sha256sum, md5sum, (err, objInfo) => {\n                callback(err, objInfo)\n                cb(true)\n              })\n            })\n            .on('error', e => cb(e))\n          return\n        }\n        this.findUploadId(bucketName, objectName, cb)\n      },\n      (uploadId, cb) => {\n        // if there was a previous incomplete upload, fetch all its uploaded parts info\n        if (uploadId) return this.listParts(bucketName, objectName, uploadId,  (e, etags) =>  cb(e, uploadId, etags))\n        // there was no previous upload, initiate a new one\n        this.initiateNewMultipartUpload(bucketName, objectName, metaData, (e, uploadId) => cb(e, uploadId, []))\n      },\n      (uploadId, etags, cb) => {\n        partSize = this.calculatePartSize(size)\n        var multipart = true\n        var uploader = this.getUploader(bucketName, objectName, metaData, multipart)\n\n        // convert array to object to make things easy\n        var parts = etags.reduce(function(acc, item) {\n          if (!acc[item.part]) {\n            acc[item.part] = item\n          }\n          return acc\n        }, {})\n        var partsDone = []\n        var partNumber = 1\n        var uploadedSize = 0\n        async.whilst(\n          cb => { cb(null, uploadedSize < size) },\n          cb => {\n            var part = parts[partNumber]\n            var hash = transformers.getHashSummer(this.enableSHA256)\n            var length = partSize\n            if (length > (size - uploadedSize)) {\n              length = size - uploadedSize\n            }\n            var start = uploadedSize\n            var end = uploadedSize + length - 1\n            var autoClose = true\n            var options = {autoClose, start, end}\n            // verify md5sum of each part\n            pipesetup(fs.createReadStream(filePath, options), hash)\n              .on('data', data => {\n                var md5sumHex = (Buffer.from(data.md5sum, 'base64')).toString('hex')\n                if (part && (md5sumHex === part.etag)) {\n                  //md5 matches, chunk already uploaded\n                  partsDone.push({part: partNumber, etag: part.etag})\n                  partNumber++\n                  uploadedSize += length\n                  return cb()\n                }\n                // part is not uploaded yet, or md5 mismatch\n                var stream = fs.createReadStream(filePath, options)\n                uploader(uploadId, partNumber, stream, length,\n                         data.sha256sum, data.md5sum, (e, objInfo) => {\n                           if (e) return cb(e)\n                           partsDone.push({part: partNumber, etag: objInfo.etag})\n                           partNumber++\n                           uploadedSize += length\n                           return cb()\n                         })\n              })\n              .on('error', e => cb(e))\n          },\n          e => {\n            if (e) return cb(e)\n            cb(null, partsDone, uploadId)\n          }\n        )\n      },\n      // all parts uploaded, complete the multipart upload\n      (etags, uploadId, cb) => this.completeMultipartUpload(bucketName, objectName, uploadId, etags, cb)\n    ], (err, ...rest) => {\n      if (err === true) return\n      callback(err, ...rest)\n    })\n  }\n\n  // Uploads the object.\n  //\n  // Uploading a stream\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `stream` _Stream_: Readable stream\n  // * `size` _number_: size of the object (optional)\n  // * `callback(err, etag)` _function_: non null `err` indicates error, `etag` _string_ is the etag of the object uploaded.\n  //\n  // Uploading \"Buffer\" or \"string\"\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `string or Buffer` _string_ or _Buffer_: string or buffer\n  // * `callback(err, objInfo)` _function_: `err` is `null` in case of success and `info` will have the following object details:\n  //   * `etag` _string_: etag of the object\n  //   * `versionId` _string_: versionId of the object\n  putObject(bucketName, objectName, stream, size, metaData, callback) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    // We'll need to shift arguments to the left because of size and metaData.\n    if (isFunction(size)) {\n      callback = size\n      metaData = {}\n    } else if (isFunction(metaData)) {\n      callback = metaData\n      metaData = {}\n    }\n\n    // We'll need to shift arguments to the left because of metaData\n    // and size being optional.\n    if (isObject(size)) {\n      metaData = size\n    }\n\n    //Ensures Metadata has appropriate prefix for A3 API\n    metaData = prependXAMZMeta(metaData)\n    if (typeof stream === 'string' || stream instanceof Buffer) {\n      // Adapts the non-stream interface into a stream.\n      size = stream.length\n      stream = readableStream(stream)\n    } else if (!isReadableStream(stream)) {\n      throw new TypeError('third argument should be of type \"stream.Readable\" or \"Buffer\" or \"string\"')\n    }\n\n    if (!isFunction(callback)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    if (isNumber(size) && size < 0) {\n      throw new errors.InvalidArgumentError(`size cannot be negative, given size: ${size}`)\n    }\n\n    // Get the part size and forward that to the BlockStream. Default to the\n    // largest block size possible if necessary.\n    if (!isNumber(size))\n      size = this.maxObjectSize\n\n    size = this.calculatePartSize(size)\n\n    // s3 requires that all non-end chunks be at least `this.partSize`,\n    // so we chunk the stream until we hit either that size or the end before\n    // we flush it to s3.\n    let chunker = new BlockStream2({size, zeroPadding: false})\n\n    // This is a Writable stream that can be written to in order to upload\n    // to the specified bucket and object automatically.\n    let uploader = new ObjectUploader(this, bucketName, objectName, size, metaData, callback)\n    // stream => chunker => uploader\n    stream.pipe(chunker).pipe(uploader)\n  }\n\n  // Copy the object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `srcObject` _string_: path of the source object to be copied\n  // * `conditions` _CopyConditions_: copy conditions that needs to be satisfied (optional, default `null`)\n  // * `callback(err, {etag, lastModified})` _function_: non null `err` indicates error, `etag` _string_ and `listModifed` _Date_ are respectively the etag and the last modified date of the newly copied object\n  copyObject(arg1, arg2, arg3, arg4, arg5) {\n    var bucketName = arg1\n    var objectName = arg2\n    var srcObject = arg3\n    var conditions, cb\n    if (typeof arg4 == 'function' && arg5 === undefined) {\n      conditions = null\n      cb = arg4\n    } else {\n      conditions = arg4\n      cb = arg5\n    }\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(srcObject)) {\n      throw new TypeError('srcObject should be of type \"string\"')\n    }\n    if (srcObject === \"\") {\n      throw new errors.InvalidPrefixError(`Empty source prefix`)\n    }\n\n    if (conditions !== null && !(conditions instanceof CopyConditions)) {\n      throw new TypeError('conditions should be of type \"CopyConditions\"')\n    }\n\n    var headers = {}\n    headers['x-amz-copy-source'] = uriEscape(srcObject)\n\n    if (conditions !== null) {\n      if (conditions.modified !== \"\") {\n        headers['x-amz-copy-source-if-modified-since'] = conditions.modified\n      }\n      if (conditions.unmodified !== \"\") {\n        headers['x-amz-copy-source-if-unmodified-since'] = conditions.unmodified\n      }\n      if (conditions.matchETag !== \"\") {\n        headers['x-amz-copy-source-if-match'] = conditions.matchETag\n      }\n      if (conditions.matchEtagExcept !== \"\") {\n        headers['x-amz-copy-source-if-none-match'] = conditions.matchETagExcept\n      }\n    }\n\n    var method = 'PUT'\n    this.makeRequest({method, bucketName, objectName, headers}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getCopyObjectTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', data => cb(null, data))\n    })\n  }\n\n  // list a batch of objects\n  listObjectsQuery(bucketName, prefix, marker, delimiter, maxKeys) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(marker)) {\n      throw new TypeError('marker should be of type \"string\"')\n    }\n    if (!isString(delimiter)) {\n      throw new TypeError('delimiter should be of type \"string\"')\n    }\n    if (!isNumber(maxKeys)) {\n      throw new TypeError('maxKeys should be of type \"number\"')\n    }\n\n    var queries = []\n    // escape every value in query string, except maxKeys\n    queries.push(`prefix=${uriEscape(prefix)}`)\n    queries.push(`delimiter=${uriEscape(delimiter)}`)\n\n    if (marker) {\n      marker = uriEscape(marker)\n      queries.push(`marker=${marker}`)\n    }\n\n    // no need to escape maxKeys\n    if (maxKeys) {\n      if (maxKeys >= 1000) {\n        maxKeys = 1000\n      }\n      queries.push(`max-keys=${maxKeys}`)\n    }\n    queries.sort()\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n\n    var method = 'GET'\n    var transformer = transformers.getListObjectsTransformer()\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // List the objects in the bucket.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: the prefix of the objects that should be listed (optional, default `''`)\n  // * `recursive` _bool_: `true` indicates recursive style listing and `false` indicates directory style listing delimited by '/'. (optional, default `false`)\n  //\n  // __Return Value__\n  // * `stream` _Stream_: stream emitting the objects in the bucket, the object is of the format:\n  // * `obj.name` _string_: name of the object\n  // * `obj.prefix` _string_: name of the object prefix\n  // * `obj.size` _number_: size of the object\n  // * `obj.etag` _string_: etag of the object\n  // * `obj.lastModified` _Date_: modified time stamp\n  listObjects(bucketName, prefix, recursive) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    // if recursive is false set delimiter to '/'\n    var delimiter = recursive ? '' : '/'\n    var marker = ''\n    var objects = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one object per _read()\n      if (objects.length) {\n        readStream.push(objects.shift())\n        return\n      }\n      if (ended) return readStream.push(null)\n      // if there are no objects to push do query for the next batch of objects\n      this.listObjectsQuery(bucketName, prefix, marker, delimiter, 1000)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          if (result.isTruncated) {\n            marker = result.nextMarker\n          } else {\n            ended = true\n          }\n          objects = result.objects\n          readStream._read()\n        })\n    }\n    return readStream\n  }\n\n  // listObjectsV2Query - (List Objects V2) - List some or all (up to 1000) of the objects in a bucket.\n  //\n  // You can use the request parameters as selection criteria to return a subset of the objects in a bucket.\n  // request parameters :-\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: Limits the response to keys that begin with the specified prefix.\n  // * `continuation-token` _string_: Used to continue iterating over a set of objects.\n  // * `delimiter` _string_: A delimiter is a character you use to group keys.\n  // * `max-keys` _number_: Sets the maximum number of keys returned in the response body.\n  // * `start-after` _string_: Specifies the key to start after when listing objects in a bucket.\n  listObjectsV2Query(bucketName, prefix, continuationToken, delimiter, maxKeys, startAfter) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(continuationToken)) {\n      throw new TypeError('continuationToken should be of type \"string\"')\n    }\n    if (!isString(delimiter)) {\n      throw new TypeError('delimiter should be of type \"string\"')\n    }\n    if (!isNumber(maxKeys)) {\n      throw new TypeError('maxKeys should be of type \"number\"')\n    }\n    if (!isString(startAfter)) {\n      throw new TypeError('startAfter should be of type \"string\"')\n    }\n    var queries = []\n\n    // Call for listing objects v2 API\n    queries.push(`list-type=2`)\n\n    // escape every value in query string, except maxKeys\n    queries.push(`prefix=${uriEscape(prefix)}`)\n    queries.push(`delimiter=${uriEscape(delimiter)}`)\n\n    if (continuationToken) {\n      continuationToken = uriEscape(continuationToken)\n      queries.push(`continuation-token=${continuationToken}`)\n    }\n    // Set start-after\n    if (startAfter) {\n      startAfter = uriEscape(startAfter)\n      queries.push(`start-after=${startAfter}`)\n    }\n    // no need to escape maxKeys\n    if (maxKeys) {\n      if (maxKeys >= 1000) {\n        maxKeys = 1000\n      }\n      queries.push(`max-keys=${maxKeys}`)\n    }\n    queries.sort()\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n    var method = 'GET'\n    var transformer = transformers.getListObjectsV2Transformer()\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // List the objects in the bucket using S3 ListObjects V2\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: the prefix of the objects that should be listed (optional, default `''`)\n  // * `recursive` _bool_: `true` indicates recursive style listing and `false` indicates directory style listing delimited by '/'. (optional, default `false`)\n  // * `startAfter` _string_: Specifies the key to start after when listing objects in a bucket. (optional, default `''`)\n  //\n  // __Return Value__\n  // * `stream` _Stream_: stream emitting the objects in the bucket, the object is of the format:\n  //   * `obj.name` _string_: name of the object\n  //   * `obj.prefix` _string_: name of the object prefix\n  //   * `obj.size` _number_: size of the object\n  //   * `obj.etag` _string_: etag of the object\n  //   * `obj.lastModified` _Date_: modified time stamp\n  listObjectsV2(bucketName, prefix, recursive, startAfter) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (startAfter === undefined) startAfter = ''\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    if (!isString(startAfter)) {\n      throw new TypeError('startAfter should be of type \"string\"')\n    }\n    // if recursive is false set delimiter to '/'\n    var delimiter = recursive ? '' : '/'\n    var continuationToken = ''\n    var objects = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one object per _read()\n      if (objects.length) {\n        readStream.push(objects.shift())\n        return\n      }\n      if (ended) return readStream.push(null)\n      // if there are no objects to push do query for the next batch of objects\n      this.listObjectsV2Query(bucketName, prefix, continuationToken, delimiter, 1000, startAfter)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          if (result.isTruncated) {\n            continuationToken = result.nextContinuationToken\n          } else {\n            ended = true\n          }\n          objects = result.objects\n          readStream._read()\n        })\n    }\n    return readStream\n  }\n\n  // Stat information of the object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `statOpts`  _object_ : Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional).\n  // * `callback(err, stat)` _function_: `err` is not `null` in case of error, `stat` contains the object information:\n  //   * `stat.size` _number_: size of the object\n  //   * `stat.etag` _string_: etag of the object\n  //   * `stat.metaData` _string_: MetaData of the object\n  //   * `stat.lastModified` _Date_: modified time stamp\n  //   * `stat.versionId` _string_: version id of the object if available\n  statObject(bucketName, objectName, statOpts={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    //backward compatibility\n    if (isFunction(statOpts)) {\n      cb = statOpts\n      statOpts={}\n    }\n\n    if(!isObject(statOpts)){\n      throw new errors.InvalidArgumentError('statOpts should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var query = querystring.stringify(statOpts)\n    var method = 'HEAD'\n    this.makeRequest({method, bucketName, objectName, query},'' ,200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      // We drain the socket so that the connection gets closed. Note that this\n      // is not expensive as the socket will not have any data.\n      response.on('data', ()=>{})\n\n      const result = {\n        size: +response.headers['content-length'],\n        metaData: extractMetadata(response.headers),\n        lastModified: new Date(response.headers['last-modified']),\n        versionId:getVersionId(response.headers),\n        etag:sanitizeETag(response.headers.etag)\n      }\n\n      cb(null, result)\n    })\n  }\n\n  // Remove the specified object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `removeOpts` _object_: Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional)\n  // * `callback(err)` _function_: callback function is called with non `null` value in case of error\n  removeObject(bucketName, objectName, removeOpts={} , cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    //backward compatibility\n    if (isFunction(removeOpts)) {\n      cb = removeOpts\n      removeOpts={}\n    }\n\n    if(!isObject(removeOpts)){\n      throw new errors.InvalidArgumentError('removeOpts should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    const method = 'DELETE'\n    const query = querystring.stringify( removeOpts )\n\n    let requestOptions = {method, bucketName,objectName}\n    if(query){\n      requestOptions['query']=query\n    }\n\n    this.makeRequest(requestOptions, '', 204, '', false, cb)\n  }\n\n  // Remove all the objects residing in the objectsList.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectsList` _array_: array of objects\n  removeObjects(bucketName, objectsList, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isArray(objectsList)) {\n      throw new errors.InvalidArgumentError('objectsList should be a list')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    const maxEntries = 1000\n    const query = 'delete'\n    const method = 'POST'\n\n    let result = objectsList.reduce((result, entry) => {\n      result.list.push(entry)\n      if (result.list.length === maxEntries) {\n        result.listOfList.push(result.list)\n        result.list = []\n      }\n      return result\n    }, {listOfList: [], list:[]})\n\n    if (result.list.length > 0) {\n      result.listOfList.push(result.list)\n    }\n    \n    const encoder = new util.TextEncoder()\n\n    async.eachSeries(result.listOfList, (list, callback) => {\n      var deleteObjects={\"Delete\":[{\"Quiet\": true}]}\n\n      list.forEach(function(value){\n        deleteObjects[\"Delete\"].push({\"Object\": [{\"Key\": value}]})\n      })\n\n      let payload = Xml(deleteObjects)\n      payload = encoder.encode(payload)\n\n      var headers = {}\n      var md5digest = Crypto.createHash('md5').update(payload).digest()\n\n      headers['Content-MD5'] = md5digest.toString('base64')\n\n      this.makeRequest({ method, bucketName, query, headers}, payload, 200, '', false, (e) => {\n        if (e) return callback(e)\n        callback(null)\n      })\n    }, cb)\n  }\n\n\n  // Get the policy on a bucket or an object prefix.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `callback(err, policy)` _function_: callback function\n  getBucketPolicy(bucketName, cb) {\n    // Validate arguments.\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    let method = 'GET'\n    let query = 'policy'\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let policy = Buffer.from('')\n      pipesetup(response, transformers.getConcater())\n        .on('data', data => policy = data)\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, policy.toString())\n        })\n    })\n  }\n\n  // Set the policy on a bucket or an object prefix.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `bucketPolicy` _string_: bucket policy (JSON stringify'ed)\n  // * `callback(err)` _function_: callback function\n  setBucketPolicy(bucketName, policy, cb) {\n    // Validate arguments.\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n    }\n    if (!isString(policy)) {\n      throw new errors.InvalidBucketPolicyError(`Invalid bucket policy: ${policy} - must be \"string\"`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    let method = 'DELETE'\n    let query = 'policy'\n\n    if (policy) {\n      method = 'PUT'\n    }\n\n    this.makeRequest({method, bucketName, query}, policy, 204, '', false, cb)\n  }\n\n  // Generate a generic presigned URL which can be\n  // used for HTTP methods GET, PUT, HEAD and DELETE\n  //\n  // __Arguments__\n  // * `method` _string_: name of the HTTP method\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds (optional, default 7 days)\n  // * `reqParams` _object_: request parameters (optional)\n  // * `requestDate` _Date_: A date object, the url will be issued at (optional)\n  presignedUrl(method, bucketName, objectName, expires, reqParams, requestDate, cb) {\n    if (this.anonymous) {\n      throw new errors.AnonymousRequestError('Presigned ' + method + ' url cannot be generated for anonymous requests')\n    }\n    if (isFunction(requestDate)) {\n      cb = requestDate\n      requestDate = new Date()\n    }\n    if (isFunction(reqParams)) {\n      cb = reqParams\n      reqParams = {}\n      requestDate = new Date()\n    }\n    if (isFunction(expires)) {\n      cb = expires\n      reqParams = {}\n      expires = 24 * 60 * 60 * 7 // 7 days in seconds\n      requestDate = new Date()\n    }\n    if (!isNumber(expires)) {\n      throw new TypeError('expires should be of type \"number\"')\n    }\n    if (!isObject(reqParams)) {\n      throw new TypeError('reqParams should be of type \"object\"')\n    }\n    if (!isValidDate(requestDate)) {\n      throw new TypeError('requestDate should be of type \"Date\" and valid')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var query = querystring.stringify(reqParams)\n    this.getBucketRegion(bucketName, (e, region) => {\n      if (e) return cb(e)\n      // This statement is added to ensure that we send error through\n      // callback on presign failure.\n      var url\n      var reqOptions = this.getRequestOptions({method,\n                                               region,\n                                               bucketName,\n                                               objectName,\n                                               query})\n      try {\n        url = presignSignatureV4(reqOptions, this.accessKey, this.secretKey,\n                                 this.sessionToken, region, requestDate, expires)\n      } catch (pe) {\n        return cb(pe)\n      }\n      cb(null, url)\n    })\n  }\n\n  // Generate a presigned URL for GET\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds (optional, default 7 days)\n  // * `respHeaders` _object_: response headers to override (optional)\n  // * `requestDate` _Date_: A date object, the url will be issued at (optional)\n  presignedGetObject(bucketName, objectName, expires, respHeaders, requestDate, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    if (isFunction(respHeaders)) {\n      cb = respHeaders\n      respHeaders = {}\n      requestDate = new Date()\n    }\n\n    var validRespHeaders = ['response-content-type', 'response-content-language', 'response-expires', 'response-cache-control',\n                            'response-content-disposition', 'response-content-encoding']\n    validRespHeaders.forEach(header => {\n      if  (respHeaders !== undefined && respHeaders[header] !== undefined && !isString(respHeaders[header])) {\n        throw new TypeError(`response header ${header} should be of type \"string\"`)\n      }\n    })\n    return this.presignedUrl('GET', bucketName, objectName, expires, respHeaders, requestDate, cb)\n  }\n\n  // Generate a presigned URL for PUT. Using this URL, the browser can upload to S3 only with the specified object name.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds (optional, default 7 days)\n  presignedPutObject(bucketName, objectName, expires, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ${bucketName}')\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError('Invalid object name: ${objectName}')\n    }\n    return this.presignedUrl('PUT', bucketName, objectName, expires, cb)\n  }\n\n  // return PostPolicy object\n  newPostPolicy() {\n    return new PostPolicy()\n  }\n\n  // presignedPostPolicy can be used in situations where we want more control on the upload than what\n  // presignedPutObject() provides. i.e Using presignedPostPolicy we will be able to put policy restrictions\n  // on the object's `name` `bucket` `expiry` `Content-Type`\n  presignedPostPolicy(postPolicy, cb) {\n    if (this.anonymous) {\n      throw new errors.AnonymousRequestError('Presigned POST policy cannot be generated for anonymous requests')\n    }\n    if (!isObject(postPolicy)) {\n      throw new TypeError('postPolicy should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n    this.getBucketRegion(postPolicy.formData.bucket, (e, region) => {\n      if (e) return cb(e)\n      var date = new Date()\n      var dateStr = makeDateLong(date)\n\n      if (!postPolicy.policy.expiration) {\n        // 'expiration' is mandatory field for S3.\n        // Set default expiration date of 7 days.\n        var expires = new Date()\n        expires.setSeconds(24 * 60 * 60 * 7)\n        postPolicy.setExpires(expires)\n      }\n\n      postPolicy.policy.conditions.push(['eq', '$x-amz-date', dateStr])\n      postPolicy.formData['x-amz-date'] = dateStr\n\n      postPolicy.policy.conditions.push(['eq', '$x-amz-algorithm', 'AWS4-HMAC-SHA256'])\n      postPolicy.formData['x-amz-algorithm'] = 'AWS4-HMAC-SHA256'\n\n      postPolicy.policy.conditions.push([\"eq\", \"$x-amz-credential\", this.accessKey + \"/\" + getScope(region, date)])\n      postPolicy.formData['x-amz-credential'] = this.accessKey + \"/\" + getScope(region, date)\n\n      if (this.sessionToken) {\n        postPolicy.policy.conditions.push(['eq', '$x-amz-security-token', this.sessionToken])\n      }\n\n      var policyBase64 = Buffer.from(JSON.stringify(postPolicy.policy)).toString('base64')\n\n      postPolicy.formData.policy = policyBase64\n\n      var signature = postPresignSignatureV4(region, date, this.secretKey, policyBase64)\n\n      postPolicy.formData['x-amz-signature'] = signature\n      var opts = {}\n      opts.region = region\n      opts.bucketName = postPolicy.formData.bucket\n      var reqOptions = this.getRequestOptions(opts)\n      var portStr = (this.port == 80 || this.port === 443) ? '' : `:${this.port.toString()}`\n      var urlStr = `${reqOptions.protocol}//${reqOptions.host}${portStr}${reqOptions.path}`\n      cb(null, {postURL: urlStr,formData: postPolicy.formData})\n    })\n  }\n\n  // Calls implemented below are related to multipart.\n\n  // Initiate a new multipart upload.\n  initiateNewMultipartUpload(bucketName, objectName, metaData, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isObject(metaData)) {\n      throw new errors.InvalidObjectNameError('contentType should be of type \"object\"')\n    }\n    var method = 'POST'\n    let headers = Object.assign({}, metaData)\n    var query = 'uploads'\n    this.makeRequest({method, bucketName, objectName, query, headers}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getInitiateMultipartTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', uploadId => cb(null, uploadId))\n    })\n  }\n\n  // Complete the multipart upload. After all the parts are uploaded issuing\n  // this call will aggregate the parts on the server into a single object.\n  completeMultipartUpload(bucketName, objectName, uploadId, etags, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!isObject(etags)) {\n      throw new TypeError('etags should be of type \"Array\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n\n    var method = 'POST'\n    var query = `uploadId=${uriEscape(uploadId)}`\n\n    var parts = []\n\n    etags.forEach(element => {\n      parts.push({\n        Part: [{\n          PartNumber: element.part\n        }, {\n          ETag: element.etag\n        }]\n      })\n    })\n\n    var payloadObject = {CompleteMultipartUpload: parts}\n    var payload = Xml(payloadObject)\n\n    this.makeRequest({method, bucketName, objectName, query}, payload, 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getCompleteMultipartTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', result => {\n          if (result.errCode) {\n            // Multipart Complete API returns an error XML after a 200 http status\n            cb(new errors.S3Error(result.errMessage))\n          } else {\n            cb(null, result.etag)\n          }\n        })\n    })\n  }\n\n  // Get part-info of all parts of an incomplete upload specified by uploadId.\n  listParts(bucketName, objectName, uploadId, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n    var parts = []\n    var listNext = (marker) => {\n      this.listPartsQuery(bucketName, objectName, uploadId, marker, (e, result) => {\n        if (e) {\n          cb(e)\n          return\n        }\n        parts = parts.concat(result.parts)\n        if (result.isTruncated) {\n          listNext(result.marker)\n          return\n        }\n        cb(null, parts)\n      })\n    }\n    listNext(0)\n  }\n\n  // Called by listParts to fetch a batch of part-info\n  listPartsQuery(bucketName, objectName, uploadId, marker, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!isNumber(marker)) {\n      throw new TypeError('marker should be of type \"number\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n    var query = ''\n    if (marker && marker !== 0) {\n      query += `part-number-marker=${marker}&`\n    }\n    query += `uploadId=${uriEscape(uploadId)}`\n\n    var method = 'GET'\n    this.makeRequest({method, bucketName, objectName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getListPartsTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', data => cb(null, data))\n    })\n  }\n\n  // Called by listIncompleteUploads to fetch a batch of incomplete uploads.\n  listIncompleteUploadsQuery(bucketName, prefix, keyMarker, uploadIdMarker, delimiter) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(keyMarker)) {\n      throw new TypeError('keyMarker should be of type \"string\"')\n    }\n    if (!isString(uploadIdMarker)) {\n      throw new TypeError('uploadIdMarker should be of type \"string\"')\n    }\n    if (!isString(delimiter)) {\n      throw new TypeError('delimiter should be of type \"string\"')\n    }\n    var queries = []\n    queries.push(`prefix=${uriEscape(prefix)}`)\n    queries.push(`delimiter=${uriEscape(delimiter)}`)\n\n    if (keyMarker) {\n      keyMarker = uriEscape(keyMarker)\n      queries.push(`key-marker=${keyMarker}`)\n    }\n    if (uploadIdMarker) {\n      queries.push(`upload-id-marker=${uploadIdMarker}`)\n    }\n\n    var maxUploads = 1000\n    queries.push(`max-uploads=${maxUploads}`)\n    queries.sort()\n    queries.unshift('uploads')\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n    var method = 'GET'\n    var transformer = transformers.getListMultipartTransformer()\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // Find uploadId of an incomplete upload.\n  findUploadId(bucketName, objectName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n    var latestUpload\n    var listNext = (keyMarker, uploadIdMarker) => {\n      this.listIncompleteUploadsQuery(bucketName, objectName, keyMarker, uploadIdMarker, '')\n        .on('error', e => cb(e))\n        .on('data', result => {\n          result.uploads.forEach(upload => {\n            if (upload.key === objectName) {\n              if (!latestUpload ||\n                (upload.initiated.getTime() > latestUpload.initiated.getTime())) {\n                latestUpload = upload\n                return\n              }\n            }\n          })\n          if (result.isTruncated) {\n            listNext(result.nextKeyMarker, result.nextUploadIdMarker)\n            return\n          }\n          if (latestUpload) return cb(null, latestUpload.uploadId)\n          cb(null, undefined)\n        })\n    }\n    listNext('', '')\n  }\n\n  // Returns a function that can be used for uploading objects.\n  // If multipart === true, it returns function that is used to upload\n  // a part of the multipart.\n  getUploader(bucketName, objectName, metaData, multipart) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isBoolean(multipart)) {\n      throw new TypeError('multipart should be of type \"boolean\"')\n    }\n    if (!isObject(metaData)) {\n      throw new TypeError('metadata should be of type \"object\"')\n    }\n\n    var validate = (stream, length, sha256sum, md5sum, cb) => {\n      if (!isReadableStream(stream)) {\n        throw new TypeError('stream should be of type \"Stream\"')\n      }\n      if (!isNumber(length)) {\n        throw new TypeError('length should be of type \"number\"')\n      }\n      if (!isString(sha256sum)) {\n        throw new TypeError('sha256sum should be of type \"string\"')\n      }\n      if (!isString(md5sum)) {\n        throw new TypeError('md5sum should be of type \"string\"')\n      }\n      if (!isFunction(cb)) {\n        throw new TypeError('callback should be of type \"function\"')\n      }\n    }\n    var simpleUploader = (...args) => {\n      validate(...args)\n      var query = ''\n      upload(query, ...args)\n    }\n    var multipartUploader = (uploadId, partNumber, ...rest) => {\n      if (!isString(uploadId)) {\n        throw new TypeError('uploadId should be of type \"string\"')\n      }\n      if (!isNumber(partNumber)) {\n        throw new TypeError('partNumber should be of type \"number\"')\n      }\n      if (!uploadId) {\n        throw new errors.InvalidArgumentError('Empty uploadId')\n      }\n      if (!partNumber) {\n        throw new errors.InvalidArgumentError('partNumber cannot be 0')\n      }\n      validate(...rest)\n      var query = `partNumber=${partNumber}&uploadId=${uriEscape(uploadId)}`\n      upload(query, ...rest)\n    }\n    var upload = (query, stream, length, sha256sum, md5sum, cb) => {\n      var method = 'PUT'\n      let headers = {'Content-Length': length}\n\n      if (!multipart) {\n        headers = Object.assign({}, metaData, headers)\n      }\n\n      if (!this.enableSHA256) headers['Content-MD5'] = md5sum\n      this.makeRequestStream({method, bucketName, objectName, query, headers},\n                             stream, sha256sum, 200, '', true, (e, response) => {\n                               if (e) return cb(e)\n                               const result = {\n                                 etag: sanitizeETag(response.headers.etag),\n                                 versionId:getVersionId(response.headers)\n                               }\n                               // Ignore the 'data' event so that the stream closes. (nodejs stream requirement)\n                               response.on('data', () => {})\n                               cb(null, result)\n                             })\n    }\n    if (multipart) {\n      return multipartUploader\n    }\n    return simpleUploader\n  }\n\n  // Remove all the notification configurations in the S3 provider\n  setBucketNotification(bucketName, config, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isObject(config)) {\n      throw new TypeError('notification config should be of type \"Object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'PUT'\n    var query = 'notification'\n    var builder = new xml2js.Builder({rootName:'NotificationConfiguration', renderOpts:{'pretty':false}, headless:true})\n    var payload = builder.buildObject(config)\n    this.makeRequest({method, bucketName, query}, payload, 200, '', false, cb)\n  }\n\n  removeAllBucketNotification(bucketName, cb) {\n    this.setBucketNotification(bucketName, new NotificationConfig(), cb)\n  }\n\n  // Return the list of notification configurations stored\n  // in the S3 provider\n  getBucketNotification(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'GET'\n    var query = 'notification'\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getBucketNotificationTransformer()\n      var bucketNotification\n      pipesetup(response, transformer)\n        .on('data', result => bucketNotification = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, bucketNotification))\n    })\n  }\n\n  // Listens for bucket notifications. Returns an EventEmitter.\n  listenBucketNotification(bucketName, prefix, suffix, events) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix must be of type string')\n    }\n    if (!isString(suffix)) {\n      throw new TypeError('suffix must be of type string')\n    }\n    if (!isArray(events)) {\n      throw new TypeError('events must be of type Array')\n    }\n    let listener = new NotificationPoller(this, bucketName, prefix, suffix, events)\n    listener.start()\n\n    return listener\n  }\n\n  getBucketVersioning(bucketName,cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n    var method = 'GET'\n    var query = \"versioning\"\n\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let versionConfig = Buffer.from('')\n      pipesetup(response, transformers.bucketVersioningTransformer())\n        .on('data', data => {\n          versionConfig = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, versionConfig)\n        })\n    })\n  }\n\n  setBucketVersioning(bucketName,versionConfig, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if(!Object.keys(versionConfig).length){\n      throw new errors.InvalidArgumentError('versionConfig should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var method = 'PUT'\n    var query = \"versioning\"\n    var builder = new xml2js.Builder({rootName:'VersioningConfiguration', renderOpts:{'pretty':false}, headless:true})\n    var payload = builder.buildObject(versionConfig)\n\n    this.makeRequest({method, bucketName, query}, payload, 200, '', false, cb)\n  }\n\n  get extensions() {\n    if(!this.clientExtensions)\n    {\n      this.clientExtensions = new extensions(this)\n    }\n    return this.clientExtensions\n  }\n}\n\n// Promisify various public-facing APIs on the Client module.\nClient.prototype.makeBucket = promisify(Client.prototype.makeBucket)\nClient.prototype.listBuckets = promisify(Client.prototype.listBuckets)\nClient.prototype.bucketExists = promisify(Client.prototype.bucketExists)\nClient.prototype.removeBucket = promisify(Client.prototype.removeBucket)\n\nClient.prototype.getObject = promisify(Client.prototype.getObject)\nClient.prototype.getPartialObject = promisify(Client.prototype.getPartialObject)\nClient.prototype.fGetObject = promisify(Client.prototype.fGetObject)\nClient.prototype.putObject = promisify(Client.prototype.putObject)\nClient.prototype.fPutObject = promisify(Client.prototype.fPutObject)\nClient.prototype.copyObject = promisify(Client.prototype.copyObject)\nClient.prototype.statObject = promisify(Client.prototype.statObject)\nClient.prototype.removeObject = promisify(Client.prototype.removeObject)\nClient.prototype.removeObjects = promisify(Client.prototype.removeObjects)\n\nClient.prototype.presignedUrl = promisify(Client.prototype.presignedUrl)\nClient.prototype.presignedGetObject = promisify(Client.prototype.presignedGetObject)\nClient.prototype.presignedPutObject = promisify(Client.prototype.presignedPutObject)\nClient.prototype.presignedPostPolicy = promisify(Client.prototype.presignedPostPolicy)\nClient.prototype.getBucketNotification = promisify(Client.prototype.getBucketNotification)\nClient.prototype.setBucketNotification = promisify(Client.prototype.setBucketNotification)\nClient.prototype.removeAllBucketNotification = promisify(Client.prototype.removeAllBucketNotification)\nClient.prototype.getBucketPolicy = promisify(Client.prototype.getBucketPolicy)\nClient.prototype.setBucketPolicy = promisify(Client.prototype.setBucketPolicy)\nClient.prototype.removeIncompleteUpload = promisify(Client.prototype.removeIncompleteUpload)\nClient.prototype.getBucketVersioning = promisify((Client.prototype.getBucketVersioning))\nClient.prototype.setBucketVersioning=promisify((Client.prototype.setBucketVersioning))\n\nexport class CopyConditions {\n  constructor() {\n    this.modified = \"\"\n    this.unmodified = \"\"\n    this.matchETag = \"\"\n    this.matchETagExcept = \"\"\n  }\n\n  setModified(date) {\n    if (!(date instanceof Date))\n      throw new TypeError('date must be of type Date')\n\n    this.modified = date.toUTCString()\n  }\n\n  setUnmodified(date) {\n    if (!(date instanceof Date))\n      throw new TypeError('date must be of type Date')\n\n    this.unmodified = date.toUTCString()\n  }\n\n  setMatchETag(etag) {\n    this.matchETag = etag\n  }\n\n  setMatchETagExcept(etag) {\n    this.matchETagExcept = etag\n  }\n}\n\n// Build PostPolicy object that can be signed by presignedPostPolicy\nexport class PostPolicy {\n  constructor() {\n    this.policy = {\n      conditions: []\n    }\n    this.formData = {}\n  }\n\n  // set expiration date\n  setExpires(date) {\n    if (!date) {\n      throw new errors.InvalidDateError('Invalid date : cannot be null')\n    }\n    this.policy.expiration = date.toISOString()\n  }\n\n  // set object name\n  setKey(objectName) {\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name : ${objectName}`)\n    }\n    this.policy.conditions.push(['eq', '$key', objectName])\n    this.formData.key = objectName\n  }\n\n  // set object name prefix, i.e policy allows any keys with this prefix\n  setKeyStartsWith(prefix) {\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    this.policy.conditions.push(['starts-with', '$key', prefix])\n    this.formData.key = prefix\n  }\n\n  // set bucket name\n  setBucket(bucketName) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name : ${bucketName}`)\n    }\n    this.policy.conditions.push(['eq', '$bucket', bucketName])\n    this.formData.bucket = bucketName\n  }\n\n  // set Content-Type\n  setContentType(type) {\n    if (!type) {\n      throw new Error('content-type cannot be null')\n    }\n    this.policy.conditions.push(['eq', '$Content-Type', type])\n    this.formData['Content-Type'] = type\n  }\n\n  // set minimum/maximum length of what Content-Length can be.\n  setContentLengthRange(min, max) {\n    if (min > max) {\n      throw new Error('min cannot be more than max')\n    }\n    if (min < 0) {\n      throw new Error('min should be > 0')\n    }\n    if (max < 0) {\n      throw new Error('max should be > 0')\n    }\n    this.policy.conditions.push(['content-length-range', min, max])\n  }\n}\n\nexport * from './notification'\n"],"file":"minio.js"}